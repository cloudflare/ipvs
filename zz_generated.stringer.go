// Code generated by "stringer -type=ForwardType,AddressFamily,Protocol --output zz_generated.stringer.go"; DO NOT EDIT.

package ipvs

import "strconv"

const _ForwardType_name = "MasquaradeLocalTunnelDirectRouteBypass"

var _ForwardType_index = [...]uint8{0, 10, 15, 21, 32, 38}

func (i ForwardType) String() string {
	if i >= ForwardType(len(_ForwardType_index)-1) {
		return "ForwardType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ForwardType_name[_ForwardType_index[i]:_ForwardType_index[i+1]]
}

const (
	_AddressFamily_name_0 = "INET"
	_AddressFamily_name_1 = "INET6"
)

func (i AddressFamily) String() string {
	switch {
	case i == 2:
		return _AddressFamily_name_0
	case i == 10:
		return _AddressFamily_name_1
	default:
		return "AddressFamily(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const (
	_Protocol_name_0 = "TCP"
	_Protocol_name_1 = "UDP"
	_Protocol_name_2 = "SCTP"
)

func (i Protocol) String() string {
	switch {
	case i == 6:
		return _Protocol_name_0
	case i == 17:
		return _Protocol_name_1
	case i == 132:
		return _Protocol_name_2
	default:
		return "Protocol(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
